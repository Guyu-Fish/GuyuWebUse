day03盒子模型
盒子模型=宽高+外边距+边框+内边距
作用：用来控制元素的显示效果
宽高：控制元素显示尺寸
外边距：控制元素的显示位置
边框：控制元素边框效果(自身)
内边距：控制元素内容的位置

盒子模型之宽高
width height  赋值-> 1.像素（100px） 2.上级元素宽高的百分比
行内元素不能修改宽高
盒子模型之外边距
元素距上级元素或相邻兄弟元素的距离  -> 相对最近的
赋值方式： margin-left/top/bottom/right: 20px <-单独向某一个方向添加外边距
margin： 20px  默认向四个方向添加外边距
         20px 40px  上下20 左右40
          0   auto   左右居中（当前行）
          上   右   下    左  的顺序
上下同时添加双向的外边距  取两个最大值
左右同时添加双向的外边距  取两个的和值

行内元素上下外边距无效
粘连问题：当元素上边缘和上级元素上边缘

盒子模型之边框
赋值方式
单独给某一个方向添加边框
border-left/right/top/bottom:1px solid
给四个方向添加边框
圆角

盒子模型之内边距
什么是内边距
     元素边缘距内容距离
赋值方式：类似于外边距
上右下左 顺时针

CSS三大特性
1.继承性：
元素可以继承上级元素文本和字体的相关的样式 个别元素自带效果
比如：超链接字体颜色 h1~h6字体
2.层叠性：
多个选择器有可能选择到同一个元素，如果作用的样式不同，
多个样式全部层叠生效，如果作用的样式相同，则由选择器的优先级决定
3.选择器优先级：
作用范围越小优先级越高
id>class>标签名>继承

元素的定位方式
五种定位方式(4+1)
静态定位+相对定位+绝对定位+固定定位
浮动定位

定位方式之静态定位
格式
静态定位也叫做文档流定位
静态定位特点：元素以左上为基准，块级元素从上往下排列，行内元素从左往右
排列
通过外边距控制元素的显示位置

定位方式之相对定位
格式：position:relative
相对定位特点：元素不脱离文档流 相对定位后，显示到其他位置但仍占据原位置
通过left/  让元素相对初始位置做偏移
应用场景：当需要移动某一个元素并且其他元素不受影响时，使用相对定位

定位方式之绝对定位
格式：position:absolute
绝对定位特点：元素脱离文档流(元素修改为绝对定位后)

如果绝对定位需要相对于某个上级元素时，需要在上级元素中添加
position:relative 参照物
应用场景：需要将某个元素进行位置偏移，并且不希望元素仍然占着
原来的显示位置时使用绝对定位